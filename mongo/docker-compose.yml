version: '3.8'

services:
  haproxy:
    image: haproxy:2.9
    container_name: haproxy-lb
    restart: unless-stopped
    ports:
      - "27034:27034"
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - mongo-0
      - mongo-1
      - mongo-2

  mongo-0:
    image: mongo:7.0.16
    container_name: mongo-0
    restart: unless-stopped
    ports:
      - "27030:27030"
    command: mongod --port 27030 --replSet rs0 --keyFile /etc/mongo-keyfile --bind_ip_all
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    healthcheck:
      test: echo "try { rs.status() } catch (err) { if(err.codeName === 'NotYetInitialized') { quit(0) } else { quit(1) } }" | mongosh --port 27030 -u root -p root --authenticationDatabase admin || echo "try { quit(0) } catch (err) { quit(1) }" | mongosh --port 27030
      interval: 5s
      timeout: 15s
      start_period: 30s
      retries: 10
    volumes:
      - mongo-0:/data/db
      - ./mongo-keyfile:/etc/mongo-keyfile:ro

  mongo-1:
    image: mongo:7.0.16
    container_name: mongo-1
    restart: unless-stopped
    ports:
      - "27031:27031"
    command: mongod --port 27031 --replSet rs0 --keyFile /etc/mongo-keyfile --bind_ip_all
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    healthcheck:
      test: echo "try { rs.status() } catch (err) { if(err.codeName === 'NotYetInitialized') { quit(0) } else { quit(1) } }" | mongosh --port 27031 -u root -p root --authenticationDatabase admin || echo "try { quit(0) } catch (err) { quit(1) }" | mongosh --port 27031
      interval: 5s
      timeout: 15s
      start_period: 30s
      retries: 10
    volumes:
      - mongo-1:/data/db
      - ./mongo-keyfile:/etc/mongo-keyfile:ro

  mongo-2:
    image: mongo:7.0.16
    container_name: mongo-2
    restart: unless-stopped
    ports:
      - "27032:27032"
    command: mongod --port 27032 --replSet rs0 --keyFile /etc/mongo-keyfile --bind_ip_all
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    healthcheck:
      test: echo "try { rs.status() } catch (err) { if(err.codeName === 'NotYetInitialized') { quit(0) } else { quit(1) } }" | mongosh --port 27032 -u root -p root --authenticationDatabase admin || echo "try { quit(0) } catch (err) { quit(1) }" | mongosh --port 27032
      interval: 5s
      timeout: 15s
      start_period: 30s
      retries: 10
    volumes:
      - mongo-2:/data/db
      - ./mongo-keyfile:/etc/mongo-keyfile:ro

  app-go:
    build: ../app-go
    container_name: app-go
    depends_on:
      - haproxy

volumes:
  mongo-0: {}
  mongo-1: {}
  mongo-2: {}